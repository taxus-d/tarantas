\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{trkv}[2017/07/10
  Key=Val parser for `tarantas' bundle]

\RequirePackage{trtools}

%% Fallback                                  
\DeclareOption*{
  \PackageError{trkv}{does not know about `\CurrentOption'.
  Please, clarify your intentions.}{}
}
\ProcessOptions*\relax

% namespace hint
% trkv  @        -- package abbreviation (=name)
%       @ pair   -- {key=value} pair

\input{trkv.code.tex}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% A kind of public API
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\let\setPairSep=\trkv@pair@sep@set
\setPairSep{=}

\let \setStorePrefix=\trkv@prefix@set
\setStorePrefix{trkv@keys@}

\def \setListSep#1{%
  \let\docsvlist\relax\DeclareListParser{\docsvlist}{#1}%
  \let\forcsvlist\relax\DeclareListParser*{\forcsvlist}{#1}%
}%


\let\newPairParser=\trkv@pairparser@def
\let\newPairsParser=\trkv@pairsparser@def

\newPairParser{\getKey}{\k}
\newPairParser{\getVal}{\v}

% keyval-like interface
\newPairParser{\storePair}{\csedef{\@trkv@prefix\k}{\v}\cssmuggle{\@trkv@prefix\k}}
\def \storePairs{\forcsvlist{\storePair}}

\def \ifKeySet#1{\ifcsname \@trkv@prefix#1\endcsname}
\def \getByKey#1{%
  \ifKeySet{#1}\csname \@trkv@prefix#1\endcsname%
  \else \PackageError{trkv}{Pair with key `#1' not stored, sorry}%
    {How about \noexpand\storePair ?}
  \fi%
}
% \def \getByKeys{\forcsvlist{\getByKey}}
\makeMultiple{getByKey<*>}

\def \getPairByKey#1{#1\@trkv@pair@sep\getByKey{#1}}
\def \getPairsByKey{\forcsvlist{\getPairByKey}}

\newPairParser{\storePairDefault}{%
  \ifcsname \@trkv@prefix\k\endcsname%
  \else \csedef{\@trkv@prefix\k}{\v}
  \fi
  \cssmuggle{\@trkv@prefix\k}%
}
\def \storePairsDefault{\forcsvlist{\storePairDefault}}
  

\endinput
% vim:ft=tex
