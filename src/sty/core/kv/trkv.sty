\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{trkv}[2017/07/10
  Key=Val parser for `tarantas' bundle]


\RequirePackage{trtools}

\newbool{trkv@debug}

\DeclareOption{debug}{\booltrue{trkv@debug}}
%% Fallback                                  
\DeclareOption*{
  \PackageError{trkv}{does not know about `\CurrentOption'.
  Please, clarify your intentions.}{}
}
\ProcessOptions*\relax

% namespace hint
% trkv  @        -- package abbreviation (=name)
%       @ pair   -- {key=value} pair

\input{trkv.code.tex}
\input{trkvlist.code.tex}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% A kind of public API
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% universal list parsers

\trkv@dolistparser@def{\dokvlist}{,}%
\trkv@arglistparser@def{\forkvlist}{,}%

% \let \setPairSep=\trkv@pair@sepset
% \let \setKvListSep=\trkv@list@sepset


% \let \newPairParser=\trkv@pairparser@def
% \let \newPairsParser=\trkv@pairsparser@def
% \let \newEpairParser=\trkv@epairparser@def
% \let \newEpairsParser=\trkv@epairsparser@def
% \let \newFullParser=\trkv@fullpairparser@def
% \let \newSingleParser=\trkv@singpairparser@def
% \let \newMultParser=\trkv@mulpairparser@def

\newcommand \newPairParser{\trkv@expandfalse\trkv@pairparser@new}
\let \newPairsParser=\newPairParser
\def \newEpairParser{\trkv@expandtrue\trkv@pairparser@new}
%need an extra bit of work


%% just an example
\newPairParser{\getKey}{\k}
\newPairParser{\getVal}{\v}

% \input{trkv.def}

\endinput
% vim:ft=tex
